<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--数据源-链接数据库的基本信息,这里直接写,不放到*.properties资源文件中-->
    <!--引入多个property，一定要添加 ignore-unresolvable="true"，否则不会寻找第二个-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="classpath:hibernate.properties" ignore-unresolvable="true"/>
    <!--数据源-链接数据库的基本信息,这里直接写,不放到*.properties资源文件中-->
    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>


    <!-- 配置hibernate session工厂 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/shop</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>

        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>cn.ouctechnology.domain</value>
            </list>
        </property>
        <!--<property name="mappingLocations">-->
        <!--<list>-->
        <!--<value>classpath:cn/ouctechnology/domain/Dir.hbm.xml</value>-->
        <!--</list>-->
        <!--</property>-->
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <context:component-scan base-package="cn.ouctechnology">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <!--开启事务注解扫描-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

      <!--声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*"  read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut expression="execution(* cn.ouctechnology.*service..*.*(..))" id="businessService"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="businessService"/>
    </aop:config>

</beans>